<<<<<<< HEAD
{"version":3,"file":"withAndroidSplashLegacyMainActivity.js","names":["_configPlugins","data","require","_codeMod","_generateCode","_debug","_interopRequireDefault","_getAndroidSplashConfig","obj","__esModule","default","debug","Debug","SHOW_SPLASH_ID","withAndroidSplashLegacyMainActivity","config","withMainActivity","modResults","contents","setSplashScreenLegacyMainActivity","language","exports","mainActivity","splashConfig","getAndroidSplashConfig","mod","removeContents","src","tag","didClear","statusBarTranslucent","androidStatusBar","translucent","resizeMode","isJava","LE","addImports","match","onCreateBlock","mergeContents","anchor","offset","comment","newSrc","join","split","filter","line","test","toUpperCase"],"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withAndroidSplashLegacyMainActivity.ts"],"sourcesContent":["import { ConfigPlugin, withMainActivity } from '@expo/config-plugins';\nimport { addImports } from '@expo/config-plugins/build/android/codeMod';\nimport { mergeContents, removeContents } from '@expo/config-plugins/build/utils/generateCode';\nimport { ExpoConfig } from '@expo/config-types';\nimport Debug from 'debug';\n\nimport { getAndroidSplashConfig } from './getAndroidSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:android:mainActivity');\n\n// DO NOT CHANGE\nconst SHOW_SPLASH_ID = 'expo-splash-screen-mainActivity-onCreate-show-splash';\n\nexport const withAndroidSplashLegacyMainActivity: ConfigPlugin = (config) => {\n  return withMainActivity(config, (config) => {\n    config.modResults.contents = setSplashScreenLegacyMainActivity(\n      config,\n      config.modResults.contents,\n      config.modResults.language\n    );\n    return config;\n  });\n};\n\nexport function setSplashScreenLegacyMainActivity(\n  config: Pick<ExpoConfig, 'android' | 'androidStatusBar' | 'userInterfaceStyle'>,\n  mainActivity: string,\n  language: 'java' | 'kt'\n): string {\n  debug(`Modify with language: \"${language}\"`);\n  const splashConfig = getAndroidSplashConfig(config);\n\n  if (!splashConfig) {\n    // Remove our generated code safely...\n    const mod = removeContents({\n      src: mainActivity,\n      tag: SHOW_SPLASH_ID,\n    });\n\n    mainActivity = mod.contents;\n    if (mod.didClear) {\n      debug('Removed SplashScreen.show()');\n    }\n    return mainActivity;\n  }\n  // TODO: Translucent is weird\n  const statusBarTranslucent = !!config.androidStatusBar?.translucent;\n\n  const { resizeMode } = splashConfig;\n  const isJava = language === 'java';\n  const LE = isJava ? ';' : '';\n\n  mainActivity = addImports(\n    mainActivity,\n    [\n      'expo.modules.splashscreen.singletons.SplashScreen',\n      'expo.modules.splashscreen.SplashScreenImageResizeMode',\n      'com.facebook.react.ReactRootView',\n      'android.os.Bundle',\n    ],\n    isJava\n  );\n\n  if (!mainActivity.match(/(?<=^.*super\\.onCreate.*$)/m)) {\n    const onCreateBlock = isJava\n      ? [\n          '    @Override',\n          '    protected void onCreate(Bundle savedInstanceState) {',\n          '      super.onCreate(savedInstanceState);',\n          '    }',\n        ]\n      : [\n          '    override fun onCreate(savedInstanceState: Bundle?) {',\n          '      super.onCreate(savedInstanceState)',\n          '    }',\n        ];\n\n    mainActivity = mergeContents({\n      src: mainActivity,\n      // insert just below super.onCreate\n      anchor: isJava\n        ? /(?<=public\\s+class\\s+.*\\s+extends\\s+.*\\s+{.*$)/m\n        : /(?<=class\\s+.*\\s+:\\s+.*\\s+{.*$)/m,\n      offset: 1,\n      comment: '//',\n      tag: 'expo-splash-screen-mainActivity-onCreate',\n      newSrc: onCreateBlock.join('\\n'),\n    }).contents;\n  }\n\n  // Remove our generated code safely...\n  mainActivity = removeContents({\n    src: mainActivity,\n    tag: SHOW_SPLASH_ID,\n  }).contents;\n\n  // Remove code from `@expo/configure-splash-screen`\n  mainActivity = mainActivity\n    .split('\\n')\n    .filter((line) => {\n      return !/SplashScreen\\.show\\(this,\\s?SplashScreenImageResizeMode\\./.test(line);\n    })\n    .join('\\n');\n\n  // Reapply generated code.\n  mainActivity = mergeContents({\n    src: mainActivity,\n    // insert just below super.onCreate\n    anchor: /(?<=^.*super\\.onCreate.*$)/m,\n    offset: 1,\n    comment: '//',\n    tag: SHOW_SPLASH_ID,\n    newSrc: `    SplashScreen.show(this, SplashScreenImageResizeMode.${resizeMode.toUpperCase()}, ReactRootView${\n      isJava ? '.class' : '::class.java'\n    }, ${statusBarTranslucent})${LE}`,\n  }).contents;\n\n  // TODO: Remove old `SplashScreen.show`\n\n  return mainActivity;\n}\n"],"mappings":"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"}
=======
{"version":3,"sources":["../../../../src/plugins/unversioned/expo-splash-screen/withAndroidSplashLegacyMainActivity.ts"],"names":["debug","SHOW_SPLASH_ID","withAndroidSplashLegacyMainActivity","config","modResults","contents","setSplashScreenLegacyMainActivity","language","mainActivity","splashConfig","mod","src","tag","didClear","statusBarTranslucent","androidStatusBar","translucent","resizeMode","isJava","LE","match","onCreateBlock","anchor","offset","comment","newSrc","join","split","filter","line","test","toUpperCase"],"mappings":"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","sourcesContent":["import { ConfigPlugin, withMainActivity } from '@expo/config-plugins';\nimport { addImports } from '@expo/config-plugins/build/android/codeMod';\nimport { mergeContents, removeContents } from '@expo/config-plugins/build/utils/generateCode';\nimport { ExpoConfig } from '@expo/config-types';\nimport Debug from 'debug';\n\nimport { getAndroidSplashConfig } from './getAndroidSplashConfig';\n\nconst debug = Debug('expo:prebuild-config:expo-splash-screen:android:mainActivity');\n\n// DO NOT CHANGE\nconst SHOW_SPLASH_ID = 'expo-splash-screen-mainActivity-onCreate-show-splash';\n\nexport const withAndroidSplashLegacyMainActivity: ConfigPlugin = config => {\n  return withMainActivity(config, config => {\n    config.modResults.contents = setSplashScreenLegacyMainActivity(\n      config,\n      config.modResults.contents,\n      config.modResults.language\n    );\n    return config;\n  });\n};\n\nexport function setSplashScreenLegacyMainActivity(\n  config: Pick<ExpoConfig, 'android' | 'androidStatusBar' | 'userInterfaceStyle'>,\n  mainActivity: string,\n  language: 'java' | 'kt'\n): string {\n  debug(`Modify with language: \"${language}\"`);\n  const splashConfig = getAndroidSplashConfig(config);\n\n  if (!splashConfig) {\n    // Remove our generated code safely...\n    const mod = removeContents({\n      src: mainActivity,\n      tag: SHOW_SPLASH_ID,\n    });\n\n    mainActivity = mod.contents;\n    if (mod.didClear) {\n      debug('Removed SplashScreen.show()');\n    }\n    return mainActivity;\n  }\n  // TODO: Translucent is weird\n  const statusBarTranslucent = !!config.androidStatusBar?.translucent;\n\n  const { resizeMode } = splashConfig;\n  const isJava = language === 'java';\n  const LE = isJava ? ';' : '';\n\n  mainActivity = addImports(\n    mainActivity,\n    [\n      'expo.modules.splashscreen.SplashScreen',\n      'expo.modules.splashscreen.SplashScreenImageResizeMode',\n      'android.os.Bundle',\n    ],\n    isJava\n  );\n\n  if (!mainActivity.match(/(?<=^.*super\\.onCreate.*$)/m)) {\n    const onCreateBlock = isJava\n      ? [\n          '    @Override',\n          '    protected void onCreate(Bundle savedInstanceState) {',\n          '      super.onCreate(savedInstanceState);',\n          '    }',\n        ]\n      : [\n          '    override fun onCreate(savedInstanceState: Bundle?) {',\n          '      super.onCreate(savedInstanceState)',\n          '    }',\n        ];\n\n    mainActivity = mergeContents({\n      src: mainActivity,\n      // insert just below super.onCreate\n      anchor: isJava\n        ? /(?<=public\\s+class\\s+.*\\s+extends\\s+.*\\s+{.*$)/m\n        : /(?<=class\\s+.*\\s+:\\s+.*\\s+{.*$)/m,\n      offset: 1,\n      comment: '//',\n      tag: 'expo-splash-screen-mainActivity-onCreate',\n      newSrc: onCreateBlock.join('\\n'),\n    }).contents;\n  }\n\n  // Remove our generated code safely...\n  mainActivity = removeContents({\n    src: mainActivity,\n    tag: SHOW_SPLASH_ID,\n  }).contents;\n\n  // Remove code from `@expo/configure-splash-screen`\n  mainActivity = mainActivity\n    .split('\\n')\n    .filter(line => {\n      return !/SplashScreen\\.show\\(this,\\s?SplashScreenImageResizeMode\\./.test(line);\n    })\n    .join('\\n');\n\n  // Reapply generated code.\n  mainActivity = mergeContents({\n    src: mainActivity,\n    // insert just below super.onCreate\n    anchor: /(?<=^.*super\\.onCreate.*$)/m,\n    offset: 1,\n    comment: '//',\n    tag: SHOW_SPLASH_ID,\n    newSrc: `    SplashScreen.show(this, SplashScreenImageResizeMode.${resizeMode.toUpperCase()}, ReactRootView${\n      isJava ? '.class' : '::class.java'\n    }, ${statusBarTranslucent})${LE}`,\n  }).contents;\n\n  // TODO: Remove old `SplashScreen.show`\n\n  return mainActivity;\n}\n"],"file":"withAndroidSplashLegacyMainActivity.js"}
>>>>>>> 279c076d3cb6520341221d8adc510e9dbdcbb7c2
